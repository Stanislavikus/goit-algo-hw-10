# Завдання 2: Інтегрування методом Монте-Карло та перевірка через quad
import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import quad

# Функція для інтегрування
def f(x):
    return x ** 2

# Межі інтегрування
a, b = 0, 2

# --- Метод Монте-Карло ---
N = 100000
x_rand = np.random.uniform(a, b, N)
y_rand = f(x_rand)
monte_carlo_result = (b - a) * np.mean(y_rand)

print("Метод Монте-Карло:", monte_carlo_result)

# --- Метод Quad ---
quad_result, error = quad(f, a, b)
print("Метод quad:", quad_result)
print("Абсолютна похибка quad:", error)

# --- Графік функції та області під кривою ---
x = np.linspace(-0.5, 2.5, 400)
y = f(x)

fig, ax = plt.subplots()
ax.plot(x, y, 'r', linewidth=2)
ix = np.linspace(a, b)
iy = f(ix)
ax.fill_between(ix, iy, color='gray', alpha=0.3)

ax.set_xlim([x[0], x[-1]])
ax.set_ylim([0, max(y) + 0.1])
ax.set_xlabel('x')
ax.set_ylabel('f(x)')
ax.set_title(f'Графік інтегрування f(x) = x² від {a} до {b}')
ax.axvline(x=a, color='gray', linestyle='--')
ax.axvline(x=b, color='gray', linestyle='--')
plt.grid()
plt.show()
